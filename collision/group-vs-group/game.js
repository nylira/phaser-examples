// Generated by LiveScript 1.2.0
(function(){
  'use strict';
  var sprite, bullets, veggies, bullet, laserSound, splatSound, scoreText, bulletTime, score, gPreload, gCreate, gUpdate, fireBullet, resetBullet, collisionHandler, g;
  bulletTime = 0;
  score = 0;
  gPreload = function(){
    g.load.image('phaser', '../../../phaser/examples/assets/sprites/phaser-dude.png');
    g.load.image('bullet', '../../../phaser/examples/assets/misc/bullet0.png');
    g.load.audio('laser', '../../../phaser/examples/assets/audio/SoundEffects/lazer.wav');
    g.load.audio('splat', '../../../phaser/examples/assets/audio/SoundEffects/explode1.wav');
    g.load.spritesheet('veggies', '../../../phaser/examples/assets/sprites/fruitnveg32wh37.png', 32, 32);
  };
  gCreate = function(){
    var i$, i, c, b;
    g.stage.backgroundColor = '#2d2d2d';
    veggies = g.add.group();
    for (i$ = 0; i$ < 50; ++i$) {
      i = i$;
      c = veggies.create(g.world.randomX, Math.random() * 500, 'veggies', g.rnd.integerInRange(0, 36));
      c.name = "veg" + i;
      c.body.immovable = true;
    }
    bullets = g.add.group();
    for (i$ = 0; i$ < 10; ++i$) {
      i = i$;
      b = bullets.create(0, 0, 'bullet');
      b.exists = false;
      b.visible = false;
      b.events.onOutOfBounds.add(resetBullet, this);
    }
    sprite = g.add.sprite(400, 550, 'phaser');
    sprite.body.collideWorldBounds = true;
    laserSound = g.add.audio('laser', 1, true);
    splatSound = g.add.audio('splat', 1, true);
    scoreText = g.add.text(16, 16, "Score: 0", {
      font: "24px Arial",
      fill: '#ffffff'
    });
    g.input.keyboard.addKeyCapture(Phaser.Keyboard.LEFT, Phaser.Keyboard.RIGHT, Phaser.Keyboard.SPACEBAR);
  };
  gUpdate = function(){
    sprite.body.velocity.x = 0;
    sprite.body.velocity.y = 0;
    if (g.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {
      sprite.body.velocity.x = -200;
    } else if (g.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {
      sprite.body.velocity.x = 200;
    }
    if (g.input.keyboard.isDown(Phaser.Keyboard.SPACEBAR)) {
      fireBullet();
    }
    g.physics.collide(bullets, veggies, collisionHandler, null, this);
  };
  fireBullet = function(){
    if (g.time.now > bulletTime) {
      bullet = bullets.getFirstExists(false);
      if (bullet) {
        bullet.reset(sprite.x + 6, sprite.y - 8);
        bullet.body.velocity.y = -300;
        bulletTime = g.time.now + 250;
        return laserSound.play('', 0, 0.05, false);
      }
    }
  };
  resetBullet = function(bullet){
    return bullet.kill();
  };
  collisionHandler = function(bullet, veggie){
    bullet.kill();
    veggie.kill();
    splatSound.play('', 0, 0.05, false);
    score += 1;
    return scoreText.setText("Score: " + score);
  };
  g = new Phaser.Game(800, 600, Phaser.CANVAS, '', {
    preload: gPreload,
    create: gCreate,
    update: gUpdate
  });
}).call(this);
