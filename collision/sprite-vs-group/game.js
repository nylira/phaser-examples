// Generated by LiveScript 1.2.0
(function(){
  'use strict';
  var sprite, group, cursors, g, collisionHandler;
  g = new Phaser.Game(800, 600, Phaser.CANVAS, '', {
    preload: preload,
    create: create,
    update: update
  });
  function preload(){
    g.load.image('phaser', '../../../phaser/examples/assets/sprites/phaser-dude.png');
    return g.load.spritesheet('veggies', '../../../phaser/examples/assets/sprites/fruitnveg32wh37.png', 32, 32);
  }
  function create(){
    var i$, i, x, y, c, results$ = [];
    g.stage.backgroundColor = '#2d2d3d';
    sprite = g.add.sprite(32, 200, 'phaser');
    sprite.name = 'phaser-dude';
    group = g.add.group();
    for (i$ = 0; i$ < 50; ++i$) {
      i = i$;
      x = 100 + Math.random() * 700;
      y = g.world.randomY;
      c = group.create(x, y, 'veggies', g.rnd.integerInRange(0, 36));
      c.name = "veg" + i;
      c.body.immovable = true;
      results$.push(cursors = g.input.keyboard.createCursorKeys());
    }
    return results$;
  }
  function update(){
    g.physics.collide(sprite, group, collisionHandler, null, this);
    sprite.body.velocity.x = 0;
    sprite.body.velocity.y = 0;
    if (cursors.left.isDown) {
      sprite.body.velocity.x = -200;
    } else if (cursors.right.isDown) {
      sprite.body.velocity.x = 200;
    }
    if (cursors.up.isDown) {
      return sprite.body.velocity.y = -200;
    } else if (cursors.down.isDown) {
      return sprite.body.velocity.y = 200;
    }
  }
  collisionHandler = function(obj1, obj2){
    if (obj2.frame === 17) {
      return obj2.kill();
    }
  };
}).call(this);
