// Generated by LiveScript 1.2.0
(function(){
  'use strict';
  var m, s, camSpeed, gPreload, gCreate, gUpdate, gRender, spriteOver, spriteOut, g;
  camSpeed = 8;
  gPreload = function(){
    g.load.spritesheet('mummy', '../../../phaser/examples/assets/sprites/metalslug_mummy37x45.png', 37, 45, 18);
    g.load.image('stars', '../../../phaser/examples/assets/misc/starfield.png');
  };
  gCreate = function(){
    g.world.setBounds(0, 0, 4000, 2000);
    s = g.add.tileSprite(0, 0, 4000, 600, 'stars');
    m = g.add.sprite(200, 200, 'mummy');
    m.anchor.setTo(0.5, 0.5);
    m.scale.setTo(6, 6);
    m.animations.add('walk');
    m.animations.play('walk', 5, true);
    m.body.velocity.setTo(50, 0);
    m.inputEnabled = true;
    m.input.pixelPerfect = true;
    m.input.useHandCursor = true;
    m.events.onInputOver.add(spriteOver, this);
    m.events.onInputOver.add(spriteOut, this);
  };
  gUpdate = function(){
    if (g.input.keyboard.isDown(Phaser.Keyboard.LEFT)) {
      g.camera.x -= camSpeed;
      if (!g.camera.atLimit.x) {
        s.tilePosition.x += camSpeed;
      }
    } else if (g.input.keyboard.isDown(Phaser.Keyboard.RIGHT)) {
      g.camera.x += camSpeed;
      if (!g.camera.atLimit.x) {
        s.tilePosition.x -= camSpeed;
      }
    }
    if (g.input.keyboard.isDown(Phaser.Keyboard.UP)) {
      g.camera.y -= camSpeed;
      if (!g.camera.atLimit.y) {
        s.tilePosition.y += camSpeed;
      }
    } else if (g.input.keyboard.isDown(Phaser.Keyboard.DOWN)) {
      g.camera.y += camSpeed;
      if (!g.camera.atLimit.y) {
        s.tilePosition.y -= camSpeed;
      }
    }
  };
  gRender = function(){
    g.debug.renderSpriteInputInfo(m, 32, 32);
  };
  spriteOver = function(){
    return console.log('over');
  };
  spriteOut = function(){
    return console.log('out');
  };
  g = new Phaser.Game(800, 600, Phaser.CANVAS, '', {
    preload: gPreload,
    create: gCreate,
    update: gUpdate,
    render: gRender
  });
}).call(this);
